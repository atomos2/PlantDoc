import streamlit as st

st.markdown("<h1 style='text-align:center'> About Plant Doc</h1>",unsafe_allow_html=True)
st.markdown("<h2>Introduction</h2>",unsafe_allow_html=True)
st.markdown("<p style='text-align:justify'> Every year millions of crops are affected by disease which leads to a significant loss in the yield. The traditional method of disease detection involves manual inspection of plants, which is often time consuming. To address this issue, we have developed a deep learning model that can detect plant diseases with high accuracy. This web app is an interface to the model that allows users to upload images of plant leaves and get predictions on whether the plant is healthy or diseased. This will help farmers and gardeners to quickly identify diseased plants and take appropriate action to prevent the spread of disease.</p><p style='text-align:justify'> Model is currently trained with 4 plants and with 23 classes, it is based on EfficientModel which is a pre-trained model and has attained has attained 98 percent accuracy with an average of 96-97 percent F1 score for an unknown test sample.</p>",unsafe_allow_html=True)
st.markdown("<h2>Dataset Information</h2>",unsafe_allow_html=True)
st.markdown("<p style='text-align:justify'>The dataset used for training the model is the PlantVillage dataset along with data collected accross the internet, which contains images of diseased and healthy plant leaves. The original dataset consists of 87,848 images of 38 classes. Around 23 classes were selected from the dataset and then manually more images were added in each dataset for better diversity. The dataset is divided into training and validation sets, with 80% of the images used for training and 10% for validation and 10% for test. The images are of varying sizes and resolutions, and are in RGB format. The dataset is highly imbalanced, with some classes having more images than others. To address this issue, manual augmentation technique such as rotation, flipping, and scaling to generate additional training samples. Along with that manually test and and validation samples were separated to avoid data leakage.</p>",unsafe_allow_html=True)